#!/usr/bin/env python3

import argparse
import asmscommon
import datetime
import matplotlib.pylab as plt
from matplotlib.colors import ListedColormap
import numpy as np
import os
import sys


parser = argparse.ArgumentParser(description="plots matrix generated by cvlr")
parser.add_argument("matrixfn",  help="matrix file")

args = parser.parse_args()

matrixfn = args.matrixfn


"""
    drnames : idx -> rname
    dgpos: idx -> gpos
    dstate: (ridx, gposidx) -> meth
    maxridx: max read index
    maxgposidx: max gpos index
"""

drnames, dgpos, dstate, maxridx, maxgposidx = asmscommon.gmatrix_of_file(matrixfn)

m = np.full((maxridx+1, maxgposidx+1), fill_value=-1, dtype = int)
for i in range(maxridx+1):
    for j in range(maxgposidx+1):
        if (i,j) in dstate:
            m[i,j] = dstate[(i,j)]
np.savetxt(sys.stdout, m)


cmap = ListedColormap(["gray", "orange", "blue"])
plt.imshow(m, cmap=cmap, vmin=-1, vmax=1)
cbar = plt.colorbar(ticks=[-1, 0, 1], extend='neither', spacing='uniform',
                    drawedges=False, boundaries=[-2,-1,0,1], values=[-1,0,1])
labels = ["NA", "0", "1"]
cbar.ax.set_yticks([-1.5, -0.5, 0.5], labels) 
plt.axis('off')
plt.title(f"{maxridx+1} reads {maxgposidx+1} loci")
##timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
##plt.text(0, maxridx + 2 , f"{os.path.basename(matrixfn)}\n{timestamp}", fontsize=12, color='blue', ha='center')
plt.show()


